---
title: COVID-19 Worldwide
datasets: ['dataset_top10', 'dataset_world_totals', 'dataset_top10_by_deaths']
---

<div class="d-sm-flex align-items-center justify-content-between mb-4">
  <h1 class="h3 mb-0 text-gray-800">COVID-19 Worldwide</h1>
</div>

<div class="row">

  <script>
    var latest_numbers = {};
    for (var stat in covid19_dataset_world_totals['total']) {
      var data = covid19_dataset_world_totals['total'][stat];
      latest_numbers[stat] = data[data.length - 1];
    }
  </script>

  <%= partial(:top_totals) %>

</div>

<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases (log scale, days since over 100 cases)", :graph_id => "graph_confirmed_realigned_log" }) %>

<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases", :graph_id => "graph_confirmed" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases (cases per million)", :graph_id => "graph_permil" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases (days since over 100 confirmed cases)", :graph_id => "graph_realigned" }) %>

<%= partial(:standard_graph_container, :locals => { :title => "Changes in confirmed, recovered and deaths per day", :graph_id => "graph_world_totals" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Daily deaths from COVID-19 across the world", :graph_id => "graph_world_total_deaths" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by deaths so far", :graph_id => "graph_top_deaths" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by deaths so far (log scale, days since over 10 deaths)", :graph_id => "graph_top_deaths_realigned_log" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by deaths so far (days since over 10 deaths)", :graph_id => "graph_top_deaths_realigned" }) %>

<script>
  // pretend we have all of them for this part
  var covid19_dataset = covid19_dataset_top10;

  var lines_permil = [];
  var lines_confirmed = [];
  var lines_top_deaths = [];

  for (var country_iso in covid19_dataset_top10['subseries']) {
    lines_confirmed.push(country_series_scaled(covid19_dataset, covid19_dataset['subseries'][country_iso], country_iso, scale_none, '')['confirmed']);
    lines_permil.push(country_series_scaled(covid19_dataset, covid19_dataset['subseries'][country_iso], country_iso, scale_permil, ' (per million)')['confirmed']);
  }

  for (var country_iso in covid19_dataset_top10_by_deaths['subseries']) {
    lines_top_deaths.push(country_series_scaled(covid19_dataset_top10_by_deaths, covid19_dataset_top10_by_deaths['subseries'][country_iso], country_iso, scale_none, '')['deaths']);
  }

  Plotly.newPlot(
    'graph_permil',
    limit_to_biggest_series(lines_permil, 10),
    $.extend({}, default_layout),
    default_config
  );

  Plotly.newPlot(
    'graph_top_deaths',
    limit_to_biggest_series(lines_top_deaths, 10),
    $.extend({}, default_layout),
    $.extend({}, default_config)
  );

  Plotly.newPlot(
    'graph_top_deaths_realigned',
    limit_to_biggest_series(shift_graph_to_threshold(lines_top_deaths, 10), 10),
    $.extend({}, default_layout, {xaxis: {type: "linear", rangemode: "nonnegative"}}),
    $.extend({}, default_config)
  );

  Plotly.newPlot(
    'graph_confirmed',
    limit_to_biggest_series(lines_confirmed, 10),
    $.extend({}, default_layout),
    $.extend({}, default_config)
  );

  Plotly.newPlot(
    'graph_realigned',
    limit_to_biggest_series(shift_graph_to_threshold(lines_confirmed), 10),
    $.extend({}, default_layout, {xaxis: {type: "linear", rangemode: "nonnegative"}}),
    $.extend({}, default_config)
  );

  plotly_log_graph_with_doubling_lines('graph_confirmed_realigned_log', limit_to_biggest_series(shift_graph_to_threshold(lines_confirmed), 10), 2, 8, null);
  plotly_log_graph_with_doubling_lines('graph_top_deaths_realigned_log', limit_to_biggest_series(shift_graph_to_threshold(lines_top_deaths, 10), 10), 1, 7, null);

  // and world totals of confirmed/deaths/recovered
  var world_totals_traces = [];
  for (var stat in covid19_dataset_world_totals['total']) {
    if (stat != 'confirmed' && stat != 'recovered' && stat != 'deaths') continue;
    var trace = covid19_dataset_world_totals['total'][stat];
    world_totals_traces.push({
      x: covid19_dataset_world_totals['timeseries_dates'],
      y: cumulative_to_delta(trace),
      name: stat[0].toUpperCase() + stat.slice(1),
      type: 'bar'
    });
  }

  Plotly.newPlot(
    'graph_world_totals',
    world_totals_traces,
    $.extend({}, default_layout, {barmode: 'stack'}),
    $.extend({}, default_config)
  );

  // deaths by top 10 countries with confirmed cases, remainder as Other
  var mortality_traces = [];
  var remainder_trace = cumulative_to_delta(covid19_dataset_world_totals['total']['deaths']);

  for (var country_iso in covid19_dataset_top10['subseries']) {
    var trace = cumulative_to_delta(covid19_dataset_top10['subseries'][country_iso]['total']['deaths']);
    mortality_traces.push({
      x: covid19_dataset_world_totals['timeseries_dates'],
      y: trace,
      name: covid19_dataset_country_names[country_iso],
      type: 'bar'
    });

    for (var i in trace) {
      remainder_trace[i] -= trace[i];
    }
  }

  mortality_traces.push({
    x: covid19_dataset_world_totals['timeseries_dates'],
    y: remainder_trace,
    name: 'Other countries',
    type: 'bar'
  });

  var annotations = [
    {
      text: "One death every minute",
      x: 0.05,
      y: 24*60,
      xref: 'paper',
      yref: 'y',
      showarrow: false,
      yanchor: 'bottom',
      font: {
        color: '#aa0000'
      }
    },
    {
      text: "One death every 30 seconds",
      x: 0.05,
      y: 24*60*2,
      xref: 'paper',
      yref: 'y',
      showarrow: false,
      yanchor: 'bottom',
      font: {
        color: '#aa0000'
      }
    },
    {
      text: "One death every 15 seconds",
      x: 0.05,
      y: 24*60*2*2,
      xref: 'paper',
      yref: 'y',
      showarrow: false,
      yanchor: 'bottom',
      font: {
        color: '#aa0000'
      }
    },
    {
      text: "One death every 5 seconds",
      x: 0.05,
      y: 24*60*2*2*3,
      xref: 'paper',
      yref: 'y',
      showarrow: false,
      yanchor: 'bottom',
      font: {
        color: '#aa0000'
      }
    }
  ];

  var shapes = [];
  for (var i in annotations) {
    var annotation = annotations[i];
    shapes.push({
      x0: 0,
      x1: 1,
      type: 'line',
      y0: annotation.y,
      y1: annotation.y,
      xref: 'paper',
      yref: 'y',
      line: {
        color: '#aa0000',
        dash: 'dot',
        width: 2
      }
    })
  }

  Plotly.newPlot(
    'graph_world_total_deaths',
    mortality_traces,
    $.extend({}, default_layout, {barmode: 'stack', annotations: annotations, shapes: shapes}),
    $.extend({}, default_config)
  );
</script>
